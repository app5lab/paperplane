{"version":3,"sources":["../../src/pages/chat/chat.module.ts","../../node_modules/date-fns/parse/index.js","../../src/pages/chat/chat.ts","../../src/pipes/relative-time.ts","../../node_modules/date-fns/distance_in_words_to_now/index.js","../../node_modules/date-fns/distance_in_words/index.js","../../node_modules/date-fns/compare_desc/index.js","../../node_modules/date-fns/is_date/index.js","../../node_modules/date-fns/difference_in_seconds/index.js","../../node_modules/date-fns/difference_in_milliseconds/index.js","../../node_modules/date-fns/difference_in_months/index.js","../../node_modules/date-fns/difference_in_calendar_months/index.js","../../node_modules/date-fns/compare_asc/index.js","../../node_modules/date-fns/locale/en/index.js","../../node_modules/date-fns/locale/en/build_distance_in_words_locale/index.js","../../node_modules/date-fns/locale/en/build_format_locale/index.js","../../node_modules/date-fns/locale/_lib/build_formatting_tokens_reg_exp/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAyC;AACO;AAClB;AAC0C;AACf;AAgBzD;IAAA;IACA,CAAC;IADY,UAAU;QAdtB,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,mDAAI;gBACJ,0EAAY;aACb;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,mDAAI,CAAC;aAC/B;YACD,OAAO,EAAE;gBACP,mDAAI;aACL;YACD,SAAS,EAAE;gBACT,yFAAW;aAAG;SACjB,CAAC;OACW,UAAU,CACtB;IAAD,iBAAC;CAAA;AADsB;;;;;;;;ACpBvB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB,EAAE;AAC3B;AACA,YAAY,EAAE;AACd,YAAY,EAAE;AACd,YAAY,EAAE;AACd;;AAEA,2BAA2B,EAAE;AAC7B;AACA,YAAY,EAAE;AACd,YAAY,EAAE;AACd,YAAY,EAAE;AACd;;AAEA;AACA,0BAA0B,EAAE;AAC5B,4BAA4B,EAAE;AAC9B,6BAA6B,EAAE,OAAO,EAAE;AACxC,6BAA6B,EAAE;AAC/B,8BAA8B,EAAE,OAAO,EAAE;;AAEzC;AACA,yBAAyB,EAAE;AAC3B,2BAA2B,EAAE,OAAO,EAAE;AACtC,6BAA6B,EAAE,OAAO,EAAE,OAAO,EAAE;;AAEjD;AACA;AACA;AACA,uCAAuC,EAAE;AACzC,yCAAyC,EAAE,OAAO,EAAE;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AC/TiE;AACvB;AACM;AAC+C;AACzC;AAOtD;IAaE,cAAY,SAAoB,EAAS,GAAe,EAC9C,WAAwB,EACxB,MAAc;QAFxB,iBA6FC;QA7FwC,QAAG,GAAH,GAAG,CAAY;QAC9C,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QAXxB,YAAO,GAAkB,EAAE,CAAC;QAG5B,cAAS,GAAG,EAAE,CAAC;QACf,oBAAe,GAAG,KAAK,CAAC;QACxB,cAAS,GAAG,E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AAC;YACT,QAAQ,EAAE,WAAW;WACG;SACzB,CAAC;sGAcwD;YACjC,+DAAW;YAChB,CAAM;OAfb,IAAI,CAwPhB;IAAD,CAAC;AAAA;SAxPY,IAAI,mB;;;;;;;;;;;;;;;;;;ACXmC;AACiB;AAKrE;IAAA;IAOA,CAAC;IANC;;OAEG;IACH,gCAAS,GAAT,UAAU,KAAa;QAAE,cAAO;aAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;YAAP,6BAAO;;QAC9B,MAAM,CAAC,yEAAoB,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IACpE,CAAC;IANU,YAAY;QAHxB,2DAAI,CAAC;YACJ,IAAI,EAAE,cAAc;SACrB,CAAC;OACW,YAAY,CAOxB;IAAD,mBAAC;CAAA;AAPwB;;;;;;;;ACNzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,mBAAmB;AAC9B,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA,GAAG;AACH;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;;AC1MA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,mBAAmB;AAC9B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,mBAAmB;AAC9B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC3BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,mBAAmB;AAC9B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC5BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,mBAAmB;AAC9B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,mBAAmB;AAC9B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;AC/BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,mBAAmB;AAC9B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;;;;;;;;AClDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AACA;AACA;AACA;AACA,0BAA0B,OAAO;AACjC,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,KAAK;;AAEL;;AAEA;AACA;AACA,0BAA0B,OAAO;AACjC,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,KAAK;;AAEL;AACA;AACA,sBAAsB,OAAO;AAC7B,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,KAAK;;AAEL;AACA;AACA,sBAAsB,OAAO;AAC7B,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,KAAK;;AAEL;AACA;AACA,sBAAsB,OAAO;AAC7B,KAAK;;AAEL;AACA;AACA,gBAAgB,OAAO;AACvB,KAAK;;AAEL;AACA;AACA,qBAAqB,OAAO;AAC5B,KAAK;;AAEL;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,6DAA6D,OAAO;AACpE;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;AClGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { Chat } from './chat';\r\nimport { ChatService } from \"../../providers/chat-service/chat-service\";\r\nimport { RelativeTime } from \"../../pipes/relative-time\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    Chat,\r\n    RelativeTime\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(Chat),\r\n  ],\r\n  exports: [\r\n    Chat\r\n  ],\r\n  providers: [\r\n    ChatService  ]\r\n})\r\nexport class ChatModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/chat/chat.module.ts","var isDate = require('../is_date/index.js')\r\n\r\nvar MILLISECONDS_IN_HOUR = 3600000\r\nvar MILLISECONDS_IN_MINUTE = 60000\r\nvar DEFAULT_ADDITIONAL_DIGITS = 2\r\n\r\nvar parseTokenDateTimeDelimeter = /[T ]/\r\nvar parseTokenPlainTime = /:/\r\n\r\n// year tokens\r\nvar parseTokenYY = /^(\\d{2})$/\r\nvar parseTokensYYY = [\r\n  /^([+-]\\d{2})$/, // 0 additional digits\r\n  /^([+-]\\d{3})$/, // 1 additional digit\r\n  /^([+-]\\d{4})$/ // 2 additional digits\r\n]\r\n\r\nvar parseTokenYYYY = /^(\\d{4})/\r\nvar parseTokensYYYYY = [\r\n  /^([+-]\\d{4})/, // 0 additional digits\r\n  /^([+-]\\d{5})/, // 1 additional digit\r\n  /^([+-]\\d{6})/ // 2 additional digits\r\n]\r\n\r\n// date tokens\r\nvar parseTokenMM = /^-(\\d{2})$/\r\nvar parseTokenDDD = /^-?(\\d{3})$/\r\nvar parseTokenMMDD = /^-?(\\d{2})-?(\\d{2})$/\r\nvar parseTokenWww = /^-?W(\\d{2})$/\r\nvar parseTokenWwwD = /^-?W(\\d{2})-?(\\d{1})$/\r\n\r\n// time tokens\r\nvar parseTokenHH = /^(\\d{2}([.,]\\d*)?)$/\r\nvar parseTokenHHMM = /^(\\d{2}):?(\\d{2}([.,]\\d*)?)$/\r\nvar parseTokenHHMMSS = /^(\\d{2}):?(\\d{2}):?(\\d{2}([.,]\\d*)?)$/\r\n\r\n// timezone tokens\r\nvar parseTokenTimezone = /([Z+-].*)$/\r\nvar parseTokenTimezoneZ = /^(Z)$/\r\nvar parseTokenTimezoneHH = /^([+-])(\\d{2})$/\r\nvar parseTokenTimezoneHHMM = /^([+-])(\\d{2}):?(\\d{2})$/\r\n\r\n/**\r\n * @category Common Helpers\r\n * @summary Convert the given argument to an instance of Date.\r\n *\r\n * @description\r\n * Convert the given argument to an instance of Date.\r\n *\r\n * If the argument is an instance of Date, the function returns its clone.\r\n *\r\n * If the argument is a number, it is treated as a timestamp.\r\n *\r\n * If an argument is a string, the function tries to parse it.\r\n * Function accepts complete ISO 8601 formats as well as partial implementations.\r\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\r\n *\r\n * If all above fails, the function passes the given argument to Date constructor.\r\n *\r\n * @param {Date|String|Number} argument - the value to convert\r\n * @param {Object} [options] - the object with options\r\n * @param {0 | 1 | 2} [options.additionalDigits=2] - the additional number of digits in the extended year format\r\n * @returns {Date} the parsed date in the local time zone\r\n *\r\n * @example\r\n * // Convert string '2014-02-11T11:30:30' to date:\r\n * var result = parse('2014-02-11T11:30:30')\r\n * //=> Tue Feb 11 2014 11:30:30\r\n *\r\n * @example\r\n * // Parse string '+02014101',\r\n * // if the additional number of digits in the extended year format is 1:\r\n * var result = parse('+02014101', {additionalDigits: 1})\r\n * //=> Fri Apr 11 2014 00:00:00\r\n */\r\nfunction parse (argument, dirtyOptions) {\r\n  if (isDate(argument)) {\r\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\r\n    return new Date(argument.getTime())\r\n  } else if (typeof argument !== 'string') {\r\n    return new Date(argument)\r\n  }\r\n\r\n  var options = dirtyOptions || {}\r\n  var additionalDigits = options.additionalDigits\r\n  if (additionalDigits == null) {\r\n    additionalDigits = DEFAULT_ADDITIONAL_DIGITS\r\n  } else {\r\n    additionalDigits = Number(additionalDigits)\r\n  }\r\n\r\n  var dateStrings = splitDateString(argument)\r\n\r\n  var parseYearResult = parseYear(dateStrings.date, additionalDigits)\r\n  var year = parseYearResult.year\r\n  var restDateString = parseYearResult.restDateString\r\n\r\n  var date = parseDate(restDateString, year)\r\n\r\n  if (date) {\r\n    var timestamp = date.getTime()\r\n    var time = 0\r\n    var offset\r\n\r\n    if (dateStrings.time) {\r\n      time = parseTime(dateStrings.time)\r\n    }\r\n\r\n    if (dateStrings.timezone) {\r\n      offset = parseTimezone(dateStrings.timezone)\r\n    } else {\r\n      // get offset accurate to hour in timezones that change offset\r\n      offset = new Date(timestamp + time).getTimezoneOffset()\r\n      offset = new Date(timestamp + time + offset * MILLISECONDS_IN_MINUTE).getTimezoneOffset()\r\n    }\r\n\r\n    return new Date(timestamp + time + offset * MILLISECONDS_IN_MINUTE)\r\n  } else {\r\n    return new Date(argument)\r\n  }\r\n}\r\n\r\nfunction splitDateString (dateString) {\r\n  var dateStrings = {}\r\n  var array = dateString.split(parseTokenDateTimeDelimeter)\r\n  var timeString\r\n\r\n  if (parseTokenPlainTime.test(array[0])) {\r\n    dateStrings.date = null\r\n    timeString = array[0]\r\n  } else {\r\n    dateStrings.date = array[0]\r\n    timeString = array[1]\r\n  }\r\n\r\n  if (timeString) {\r\n    var token = parseTokenTimezone.exec(timeString)\r\n    if (token) {\r\n      dateStrings.time = timeString.replace(token[1], '')\r\n      dateStrings.timezone = token[1]\r\n    } else {\r\n      dateStrings.time = timeString\r\n    }\r\n  }\r\n\r\n  return dateStrings\r\n}\r\n\r\nfunction parseYear (dateString, additionalDigits) {\r\n  var parseTokenYYY = parseTokensYYY[additionalDigits]\r\n  var parseTokenYYYYY = parseTokensYYYYY[additionalDigits]\r\n\r\n  var token\r\n\r\n  // YYYY or ±YYYYY\r\n  token = parseTokenYYYY.exec(dateString) || parseTokenYYYYY.exec(dateString)\r\n  if (token) {\r\n    var yearString = token[1]\r\n    return {\r\n      year: parseInt(yearString, 10),\r\n      restDateString: dateString.slice(yearString.length)\r\n    }\r\n  }\r\n\r\n  // YY or ±YYY\r\n  token = parseTokenYY.exec(dateString) || parseTokenYYY.exec(dateString)\r\n  if (token) {\r\n    var centuryString = token[1]\r\n    return {\r\n      year: parseInt(centuryString, 10) * 100,\r\n      restDateString: dateString.slice(centuryString.length)\r\n    }\r\n  }\r\n\r\n  // Invalid ISO-formatted year\r\n  return {\r\n    year: null\r\n  }\r\n}\r\n\r\nfunction parseDate (dateString, year) {\r\n  // Invalid ISO-formatted year\r\n  if (year === null) {\r\n    return null\r\n  }\r\n\r\n  var token\r\n  var date\r\n  var month\r\n  var week\r\n\r\n  // YYYY\r\n  if (dateString.length === 0) {\r\n    date = new Date(0)\r\n    date.setUTCFullYear(year)\r\n    return date\r\n  }\r\n\r\n  // YYYY-MM\r\n  token = parseTokenMM.exec(dateString)\r\n  if (token) {\r\n    date = new Date(0)\r\n    month = parseInt(token[1], 10) - 1\r\n    date.setUTCFullYear(year, month)\r\n    return date\r\n  }\r\n\r\n  // YYYY-DDD or YYYYDDD\r\n  token = parseTokenDDD.exec(dateString)\r\n  if (token) {\r\n    date = new Date(0)\r\n    var dayOfYear = parseInt(token[1], 10)\r\n    date.setUTCFullYear(year, 0, dayOfYear)\r\n    return date\r\n  }\r\n\r\n  // YYYY-MM-DD or YYYYMMDD\r\n  token = parseTokenMMDD.exec(dateString)\r\n  if (token) {\r\n    date = new Date(0)\r\n    month = parseInt(token[1], 10) - 1\r\n    var day = parseInt(token[2], 10)\r\n    date.setUTCFullYear(year, month, day)\r\n    return date\r\n  }\r\n\r\n  // YYYY-Www or YYYYWww\r\n  token = parseTokenWww.exec(dateString)\r\n  if (token) {\r\n    week = parseInt(token[1], 10) - 1\r\n    return dayOfISOYear(year, week)\r\n  }\r\n\r\n  // YYYY-Www-D or YYYYWwwD\r\n  token = parseTokenWwwD.exec(dateString)\r\n  if (token) {\r\n    week = parseInt(token[1], 10) - 1\r\n    var dayOfWeek = parseInt(token[2], 10) - 1\r\n    return dayOfISOYear(year, week, dayOfWeek)\r\n  }\r\n\r\n  // Invalid ISO-formatted date\r\n  return null\r\n}\r\n\r\nfunction parseTime (timeString) {\r\n  var token\r\n  var hours\r\n  var minutes\r\n\r\n  // hh\r\n  token = parseTokenHH.exec(timeString)\r\n  if (token) {\r\n    hours = parseFloat(token[1].replace(',', '.'))\r\n    return (hours % 24) * MILLISECONDS_IN_HOUR\r\n  }\r\n\r\n  // hh:mm or hhmm\r\n  token = parseTokenHHMM.exec(timeString)\r\n  if (token) {\r\n    hours = parseInt(token[1], 10)\r\n    minutes = parseFloat(token[2].replace(',', '.'))\r\n    return (hours % 24) * MILLISECONDS_IN_HOUR +\r\n      minutes * MILLISECONDS_IN_MINUTE\r\n  }\r\n\r\n  // hh:mm:ss or hhmmss\r\n  token = parseTokenHHMMSS.exec(timeString)\r\n  if (token) {\r\n    hours = parseInt(token[1], 10)\r\n    minutes = parseInt(token[2], 10)\r\n    var seconds = parseFloat(token[3].replace(',', '.'))\r\n    return (hours % 24) * MILLISECONDS_IN_HOUR +\r\n      minutes * MILLISECONDS_IN_MINUTE +\r\n      seconds * 1000\r\n  }\r\n\r\n  // Invalid ISO-formatted time\r\n  return null\r\n}\r\n\r\nfunction parseTimezone (timezoneString) {\r\n  var token\r\n  var absoluteOffset\r\n\r\n  // Z\r\n  token = parseTokenTimezoneZ.exec(timezoneString)\r\n  if (token) {\r\n    return 0\r\n  }\r\n\r\n  // ±hh\r\n  token = parseTokenTimezoneHH.exec(timezoneString)\r\n  if (token) {\r\n    absoluteOffset = parseInt(token[2], 10) * 60\r\n    return (token[1] === '+') ? -absoluteOffset : absoluteOffset\r\n  }\r\n\r\n  // ±hh:mm or ±hhmm\r\n  token = parseTokenTimezoneHHMM.exec(timezoneString)\r\n  if (token) {\r\n    absoluteOffset = parseInt(token[2], 10) * 60 + parseInt(token[3], 10)\r\n    return (token[1] === '+') ? -absoluteOffset : absoluteOffset\r\n  }\r\n\r\n  return 0\r\n}\r\n\r\nfunction dayOfISOYear (isoYear, week, day) {\r\n  week = week || 0\r\n  day = day || 0\r\n  var date = new Date(0)\r\n  date.setUTCFullYear(isoYear, 0, 4)\r\n  var fourthOfJanuaryDay = date.getUTCDay() || 7\r\n  var diff = week * 7 + day + 1 - fourthOfJanuaryDay\r\n  date.setUTCDate(date.getUTCDate() + diff)\r\n  return date\r\n}\r\n\r\nmodule.exports = parse\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/date-fns/parse/index.js\n// module id = 593\n// module chunks = 0","import { Component, ElementRef, ViewChild } from '@angular/core';\r\nimport { IonicPage, NavParams } from 'ionic-angular';\r\nimport { Events, Content } from 'ionic-angular';\r\nimport { ChatService, ChatMessage, UserInfo } from \"../../providers/chat-service/chat-service\";\r\nimport { ApiProvider } from '../../providers/api/api';\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-chat',\r\n  templateUrl: 'chat.html',\r\n})\r\nexport class Chat {\r\n\r\n  @ViewChild(Content) content: Content;\r\n  @ViewChild('chat_input') messageInput: ElementRef;\r\n  msgList: ChatMessage[] = [];\r\n  user: UserInfo;\r\n  toUser: UserInfo;\r\n  editorMsg = '';\r\n  showEmojiPicker = false;\r\n  sender_id = ''\r\n  chat: any;\r\n  nickname:string= 'hassan'\r\n  m:any []=[]\r\n  constructor(navParams: NavParams, public api:ApiProvider,\r\n    private chatService: ChatService,\r\n    private events: Events,) {\r\n    \r\n    this.data.type = 'message';\r\n    this.data.nickname = this.nickname;\r\n    var user = JSON.parse( localStorage.getItem( 'zip_user' ) )    \r\n    \r\n    \r\n    this.user = {\r\n      id:user.id,\r\n      name:user.fname + ' ' + user.lname,\r\n      avatar:user.img\r\n    }\r\n    this.toUser = navParams.get('to_user')\r\n    // this.toUser = {\r\n    //   id: '4',\r\n    //   name: 'test',\r\n    //   avatar:''\r\n    // };\r\n\r\n\r\n    this.sender_id = user.id\r\n    let that = this\r\n    api.firebase().ref('chats/').child( user.id +'_'+ this.toUser.id).once('value', d =>{\r\n      if(d.exists())\r\n        {\r\n          this.chat = api.firebase().ref('chats/' + user.id +'_'+  this.toUser.id)\r\n          api.firebase().ref('rooms/' + user.id).child(this.toUser.id).once('value', ok => {\r\n            if(!ok.exists())\r\n            {\r\n              api.firebase().ref('rooms/' + user.id +'/'+ this.toUser.id).set(\r\n                {\r\n                  msg:'',\r\n                  date:'',\r\n                  name:this.user.name,\r\n                  img:this.user.avatar\r\n                })\r\n              api.firebase().ref('rooms/' + this.toUser.id +'/'+ user.id).set(\r\n                {\r\n                  msg:'',\r\n                  date:'',\r\n                  name:this.user.name,\r\n                  img:this.user.avatar\r\n                }\r\n              )\r\n            }\r\n\r\n          })\r\n          this.chat.once('value', data => {\r\n            if(data != null)\r\n              this.m = that.snapshotToArray(data)\r\n            this.msgList = this.m\r\n            })\r\n        }\r\n      else{\r\n          console.log('asd');\r\n          this.chat = api.firebase().ref('chats/' + this.toUser.id +'_'+  user.id)\r\n          api.firebase().ref('rooms/' + user.id).child(this.toUser.id).once('value', ok => {\r\n            if(!ok.exists())\r\n            {\r\n              api.firebase().ref('rooms/' + user.id +'/'+ this.toUser.id).set(\r\n                {\r\n                  msg:'',\r\n                  date:'',\r\n                  name:this.user.name,\r\n                  img:this.user.avatar\r\n                }\r\n              )\r\n              api.firebase().ref('rooms/' + this.toUser.id +'/'+ user.id).set(\r\n                {\r\n                msg:'',\r\n                date:'',\r\n                name:this.user.name,\r\n                img:this.user.avatar\r\n              })\r\n            }\r\n          })\r\n          this.chat.once('value', data => {\r\n            if(data != null)\r\n              this.m = that.snapshotToArray(data)\r\n            this.msgList = this.m\r\n            })\r\n        }\r\n    })\r\n    \r\n    // Get the navParams toUserId parameter\r\n    \r\n    // Get mock user information \r\n    // this.chatService.getUserInfo()\r\n    // .then((res) => {\r\n    //   this.user = res\r\n    // });\r\n  }\r\n\r\n  snapshotToArray = snapshot => {\r\n    let returnArr = [];\r\n\r\n    snapshot.forEach(childSnapshot => {\r\n        let item = childSnapshot.val();\r\n        item.key = childSnapshot.key;\r\n        returnArr.push(item);\r\n    });\r\n\r\n    return returnArr;\r\n};\r\n\r\n  ionViewWillLeave() {\r\n    // unsubscribe\r\n    this.events.unsubscribe('chat:received');\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    //get message list\r\n    // this.getMsg();\r\n\r\n    // Subscribe to received  new message events\r\n    this.events.subscribe('chat:received', msg => {\r\n      this.pushNewMsg(msg);\r\n    })\r\n  }\r\n\r\n  onFocus() {\r\n    this.showEmojiPicker = false;\r\n    this.content.resize();\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  switchEmojiPicker() {\r\n    this.showEmojiPicker = !this.showEmojiPicker;\r\n    if (!this.showEmojiPicker) {\r\n      this.focus();\r\n    } else {\r\n      this.setTextareaScroll();\r\n    }\r\n    this.content.resize();\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  /**\r\n   * @name getMsg\r\n   * @returns {Promise<ChatMessage[]>}\r\n   */\r\n  getMsg() {\r\n    // Get mock message list\r\n    return this.chatService\r\n    .getMsgList()\r\n    .subscribe(res => {\r\n      this.msgList = this.m;\r\n      this.scrollToBottom();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @name sendMsg\r\n   */\r\n  sendMsg() {\r\n    if (!this.editorMsg.trim()) return;\r\n\r\n    // Mock message\r\n    const id = Date.now().toString();\r\n    let newMsg: ChatMessage = {\r\n      messageId: id,\r\n      userId: this.user.id,\r\n      userName: this.user.name,\r\n      userAvatar: this.user.avatar,\r\n      toUserId: this.toUser.id,\r\n      time: Date.now(),\r\n      message: this.editorMsg,\r\n      status: 'pending'\r\n    };\r\n\r\n    this.pushNewMsg(newMsg);\r\n    this.editorMsg = '';\r\n\r\n    if (!this.showEmojiPicker) {\r\n      this.focus();\r\n    }\r\n\r\n    this.chatService.sendMsg(newMsg)\r\n    .then(() => {\r\n      let index = this.getMsgIndexById(id);\r\n      if (index !== -1) {\r\n        this.msgList[index].status = 'success';\r\n      }\r\n    })\r\n    \r\n  }\r\n  data = { type:'', nickname:'', message:'' };\r\n\r\n  /**\r\n   * @name pushNewMsg\r\n   * @param msg\r\n   */\r\n  pushNewMsg(msg: ChatMessage) {\r\n    const userId = this.user.id,\r\n      toUserId = this.toUser.id;\r\n    // Verify user relationships\r\n    if (msg.userId === userId && msg.toUserId === toUserId) {\r\n      console.log('pushing to db');\r\n    msg.status='success'\r\n    this.chat.push(msg).then( () => {\r\n      this.api.firebase().ref('rooms/' + this.user.id +'/'+ this.toUser.id).set({msg:msg.message})\r\n      this.api.firebase().ref('rooms/' + this.toUser.id +'/'+ this.user.id).set({msg:msg.message})\r\n      this.msgList.push(msg);\r\n      this.data.message = '';\r\n      })\r\n    } else if (msg.toUserId === userId && msg.userId === toUserId) {\r\n      this.msgList.push(msg);\r\n    }\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  getMsgIndexById(id: string) {\r\n    return this.msgList.findIndex(e => e.messageId === id)\r\n  }\r\n\r\n  scrollToBottom() {\r\n    setTimeout(() => {\r\n      if (this.content.scrollToBottom) {\r\n        this.content.scrollToBottom();\r\n      }\r\n    }, 400)\r\n  }\r\n\r\n  private focus() {\r\n    if (this.messageInput && this.messageInput.nativeElement) {\r\n      this.messageInput.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  private setTextareaScroll() {\r\n    const textarea =this.messageInput.nativeElement;\r\n    textarea.scrollTop = textarea.scrollHeight;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/chat/chat.ts","import { Pipe, PipeTransform } from '@angular/core';\r\nimport distanceInWordsToNow from 'date-fns/distance_in_words_to_now';\r\n\r\n@Pipe({\r\n  name: 'relativeTime',\r\n})\r\nexport class RelativeTime implements PipeTransform {\r\n  /**\r\n   * Takes a value and makes it lowercase.\r\n   */\r\n  transform(value: string, ...args) {\r\n    return distanceInWordsToNow(new Date(value), { addSuffix: true });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/relative-time.ts","var distanceInWords = require('../distance_in_words/index.js')\r\n\r\n/**\r\n * @category Common Helpers\r\n * @summary Return the distance between the given date and now in words.\r\n *\r\n * @description\r\n * Return the distance between the given date and now in words.\r\n *\r\n * | Distance to now                                                   | Result              |\r\n * |-------------------------------------------------------------------|---------------------|\r\n * | 0 ... 30 secs                                                     | less than a minute  |\r\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\r\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\r\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\r\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\r\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\r\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\r\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\r\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\r\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\r\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\r\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\r\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\r\n * | N yrs ... N yrs 3 months                                          | about N years       |\r\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\r\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\r\n *\r\n * With `options.includeSeconds == true`:\r\n * | Distance to now     | Result               |\r\n * |---------------------|----------------------|\r\n * | 0 secs ... 5 secs   | less than 5 seconds  |\r\n * | 5 secs ... 10 secs  | less than 10 seconds |\r\n * | 10 secs ... 20 secs | less than 20 seconds |\r\n * | 20 secs ... 40 secs | half a minute        |\r\n * | 40 secs ... 60 secs | less than a minute   |\r\n * | 60 secs ... 90 secs | 1 minute             |\r\n *\r\n * @param {Date|String|Number} date - the given date\r\n * @param {Object} [options] - the object with options\r\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\r\n * @param {Boolean} [options.addSuffix=false] - result specifies if the second date is earlier or later than the first\r\n * @param {Object} [options.locale=enLocale] - the locale object\r\n * @returns {String} the distance in words\r\n *\r\n * @example\r\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\r\n * var result = distanceInWordsToNow(\r\n *   new Date(2014, 6, 2)\r\n * )\r\n * //=> '6 months'\r\n *\r\n * @example\r\n * // If now is 1 January 2015 00:00:00,\r\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\r\n * var result = distanceInWordsToNow(\r\n *   new Date(2015, 0, 1, 0, 0, 15),\r\n *   {includeSeconds: true}\r\n * )\r\n * //=> 'less than 20 seconds'\r\n *\r\n * @example\r\n * // If today is 1 January 2015,\r\n * // what is the distance to 1 January 2016, with a suffix?\r\n * var result = distanceInWordsToNow(\r\n *   new Date(2016, 0, 1),\r\n *   {addSuffix: true}\r\n * )\r\n * //=> 'in about 1 year'\r\n *\r\n * @example\r\n * // If today is 1 January 2015,\r\n * // what is the distance to 1 August 2016 in Esperanto?\r\n * var eoLocale = require('date-fns/locale/eo')\r\n * var result = distanceInWordsToNow(\r\n *   new Date(2016, 7, 1),\r\n *   {locale: eoLocale}\r\n * )\r\n * //=> 'pli ol 1 jaro'\r\n */\r\nfunction distanceInWordsToNow (dirtyDate, dirtyOptions) {\r\n  return distanceInWords(Date.now(), dirtyDate, dirtyOptions)\r\n}\r\n\r\nmodule.exports = distanceInWordsToNow\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/date-fns/distance_in_words_to_now/index.js\n// module id = 606\n// module chunks = 0","var compareDesc = require('../compare_desc/index.js')\r\nvar parse = require('../parse/index.js')\r\nvar differenceInSeconds = require('../difference_in_seconds/index.js')\r\nvar differenceInMonths = require('../difference_in_months/index.js')\r\nvar enLocale = require('../locale/en/index.js')\r\n\r\nvar MINUTES_IN_DAY = 1440\r\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520\r\nvar MINUTES_IN_MONTH = 43200\r\nvar MINUTES_IN_TWO_MONTHS = 86400\r\n\r\n/**\r\n * @category Common Helpers\r\n * @summary Return the distance between the given dates in words.\r\n *\r\n * @description\r\n * Return the distance between the given dates in words.\r\n *\r\n * | Distance between dates                                            | Result              |\r\n * |-------------------------------------------------------------------|---------------------|\r\n * | 0 ... 30 secs                                                     | less than a minute  |\r\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\r\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\r\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\r\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\r\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\r\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\r\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\r\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\r\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\r\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\r\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\r\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\r\n * | N yrs ... N yrs 3 months                                          | about N years       |\r\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\r\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\r\n *\r\n * With `options.includeSeconds == true`:\r\n * | Distance between dates | Result               |\r\n * |------------------------|----------------------|\r\n * | 0 secs ... 5 secs      | less than 5 seconds  |\r\n * | 5 secs ... 10 secs     | less than 10 seconds |\r\n * | 10 secs ... 20 secs    | less than 20 seconds |\r\n * | 20 secs ... 40 secs    | half a minute        |\r\n * | 40 secs ... 60 secs    | less than a minute   |\r\n * | 60 secs ... 90 secs    | 1 minute             |\r\n *\r\n * @param {Date|String|Number} dateToCompare - the date to compare with\r\n * @param {Date|String|Number} date - the other date\r\n * @param {Object} [options] - the object with options\r\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\r\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\r\n * @param {Object} [options.locale=enLocale] - the locale object\r\n * @returns {String} the distance in words\r\n *\r\n * @example\r\n * // What is the distance between 2 July 2014 and 1 January 2015?\r\n * var result = distanceInWords(\r\n *   new Date(2014, 6, 2),\r\n *   new Date(2015, 0, 1)\r\n * )\r\n * //=> '6 months'\r\n *\r\n * @example\r\n * // What is the distance between 1 January 2015 00:00:15\r\n * // and 1 January 2015 00:00:00, including seconds?\r\n * var result = distanceInWords(\r\n *   new Date(2015, 0, 1, 0, 0, 15),\r\n *   new Date(2015, 0, 1, 0, 0, 0),\r\n *   {includeSeconds: true}\r\n * )\r\n * //=> 'less than 20 seconds'\r\n *\r\n * @example\r\n * // What is the distance from 1 January 2016\r\n * // to 1 January 2015, with a suffix?\r\n * var result = distanceInWords(\r\n *   new Date(2016, 0, 1),\r\n *   new Date(2015, 0, 1),\r\n *   {addSuffix: true}\r\n * )\r\n * //=> 'about 1 year ago'\r\n *\r\n * @example\r\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\r\n * var eoLocale = require('date-fns/locale/eo')\r\n * var result = distanceInWords(\r\n *   new Date(2016, 7, 1),\r\n *   new Date(2015, 0, 1),\r\n *   {locale: eoLocale}\r\n * )\r\n * //=> 'pli ol 1 jaro'\r\n */\r\nfunction distanceInWords (dirtyDateToCompare, dirtyDate, dirtyOptions) {\r\n  var options = dirtyOptions || {}\r\n\r\n  var comparison = compareDesc(dirtyDateToCompare, dirtyDate)\r\n\r\n  var locale = options.locale\r\n  var localize = enLocale.distanceInWords.localize\r\n  if (locale && locale.distanceInWords && locale.distanceInWords.localize) {\r\n    localize = locale.distanceInWords.localize\r\n  }\r\n\r\n  var localizeOptions = {\r\n    addSuffix: Boolean(options.addSuffix),\r\n    comparison: comparison\r\n  }\r\n\r\n  var dateLeft, dateRight\r\n  if (comparison > 0) {\r\n    dateLeft = parse(dirtyDateToCompare)\r\n    dateRight = parse(dirtyDate)\r\n  } else {\r\n    dateLeft = parse(dirtyDate)\r\n    dateRight = parse(dirtyDateToCompare)\r\n  }\r\n\r\n  var seconds = differenceInSeconds(dateRight, dateLeft)\r\n  var offset = dateRight.getTimezoneOffset() - dateLeft.getTimezoneOffset()\r\n  var minutes = Math.round(seconds / 60) - offset\r\n  var months\r\n\r\n  // 0 up to 2 mins\r\n  if (minutes < 2) {\r\n    if (options.includeSeconds) {\r\n      if (seconds < 5) {\r\n        return localize('lessThanXSeconds', 5, localizeOptions)\r\n      } else if (seconds < 10) {\r\n        return localize('lessThanXSeconds', 10, localizeOptions)\r\n      } else if (seconds < 20) {\r\n        return localize('lessThanXSeconds', 20, localizeOptions)\r\n      } else if (seconds < 40) {\r\n        return localize('halfAMinute', null, localizeOptions)\r\n      } else if (seconds < 60) {\r\n        return localize('lessThanXMinutes', 1, localizeOptions)\r\n      } else {\r\n        return localize('xMinutes', 1, localizeOptions)\r\n      }\r\n    } else {\r\n      if (minutes === 0) {\r\n        return localize('lessThanXMinutes', 1, localizeOptions)\r\n      } else {\r\n        return localize('xMinutes', minutes, localizeOptions)\r\n      }\r\n    }\r\n\r\n  // 2 mins up to 0.75 hrs\r\n  } else if (minutes < 45) {\r\n    return localize('xMinutes', minutes, localizeOptions)\r\n\r\n  // 0.75 hrs up to 1.5 hrs\r\n  } else if (minutes < 90) {\r\n    return localize('aboutXHours', 1, localizeOptions)\r\n\r\n  // 1.5 hrs up to 24 hrs\r\n  } else if (minutes < MINUTES_IN_DAY) {\r\n    var hours = Math.round(minutes / 60)\r\n    return localize('aboutXHours', hours, localizeOptions)\r\n\r\n  // 1 day up to 1.75 days\r\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\r\n    return localize('xDays', 1, localizeOptions)\r\n\r\n  // 1.75 days up to 30 days\r\n  } else if (minutes < MINUTES_IN_MONTH) {\r\n    var days = Math.round(minutes / MINUTES_IN_DAY)\r\n    return localize('xDays', days, localizeOptions)\r\n\r\n  // 1 month up to 2 months\r\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\r\n    months = Math.round(minutes / MINUTES_IN_MONTH)\r\n    return localize('aboutXMonths', months, localizeOptions)\r\n  }\r\n\r\n  months = differenceInMonths(dateRight, dateLeft)\r\n\r\n  // 2 months up to 12 months\r\n  if (months < 12) {\r\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH)\r\n    return localize('xMonths', nearestMonth, localizeOptions)\r\n\r\n  // 1 year up to max Date\r\n  } else {\r\n    var monthsSinceStartOfYear = months % 12\r\n    var years = Math.floor(months / 12)\r\n\r\n    // N years up to 1 years 3 months\r\n    if (monthsSinceStartOfYear < 3) {\r\n      return localize('aboutXYears', years, localizeOptions)\r\n\r\n    // N years 3 months up to N years 9 months\r\n    } else if (monthsSinceStartOfYear < 9) {\r\n      return localize('overXYears', years, localizeOptions)\r\n\r\n    // N years 9 months up to N year 12 months\r\n    } else {\r\n      return localize('almostXYears', years + 1, localizeOptions)\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = distanceInWords\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/date-fns/distance_in_words/index.js\n// module id = 607\n// module chunks = 0","var parse = require('../parse/index.js')\r\n\r\n/**\r\n * @category Common Helpers\r\n * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.\r\n *\r\n * @description\r\n * Compare the two dates and return -1 if the first date is after the second,\r\n * 1 if the first date is before the second or 0 if dates are equal.\r\n *\r\n * @param {Date|String|Number} dateLeft - the first date to compare\r\n * @param {Date|String|Number} dateRight - the second date to compare\r\n * @returns {Number} the result of the comparison\r\n *\r\n * @example\r\n * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:\r\n * var result = compareDesc(\r\n *   new Date(1987, 1, 11),\r\n *   new Date(1989, 6, 10)\r\n * )\r\n * //=> 1\r\n *\r\n * @example\r\n * // Sort the array of dates in reverse chronological order:\r\n * var result = [\r\n *   new Date(1995, 6, 2),\r\n *   new Date(1987, 1, 11),\r\n *   new Date(1989, 6, 10)\r\n * ].sort(compareDesc)\r\n * //=> [\r\n * //   Sun Jul 02 1995 00:00:00,\r\n * //   Mon Jul 10 1989 00:00:00,\r\n * //   Wed Feb 11 1987 00:00:00\r\n * // ]\r\n */\r\nfunction compareDesc (dirtyDateLeft, dirtyDateRight) {\r\n  var dateLeft = parse(dirtyDateLeft)\r\n  var timeLeft = dateLeft.getTime()\r\n  var dateRight = parse(dirtyDateRight)\r\n  var timeRight = dateRight.getTime()\r\n\r\n  if (timeLeft > timeRight) {\r\n    return -1\r\n  } else if (timeLeft < timeRight) {\r\n    return 1\r\n  } else {\r\n    return 0\r\n  }\r\n}\r\n\r\nmodule.exports = compareDesc\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/date-fns/compare_desc/index.js\n// module id = 608\n// module chunks = 0","/**\r\n * @category Common Helpers\r\n * @summary Is the given argument an instance of Date?\r\n *\r\n * @description\r\n * Is the given argument an instance of Date?\r\n *\r\n * @param {*} argument - the argument to check\r\n * @returns {Boolean} the given argument is an instance of Date\r\n *\r\n * @example\r\n * // Is 'mayonnaise' a Date?\r\n * var result = isDate('mayonnaise')\r\n * //=> false\r\n */\r\nfunction isDate (argument) {\r\n  return argument instanceof Date\r\n}\r\n\r\nmodule.exports = isDate\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/date-fns/is_date/index.js\n// module id = 609\n// module chunks = 0","var differenceInMilliseconds = require('../difference_in_milliseconds/index.js')\r\n\r\n/**\r\n * @category Second Helpers\r\n * @summary Get the number of seconds between the given dates.\r\n *\r\n * @description\r\n * Get the number of seconds between the given dates.\r\n *\r\n * @param {Date|String|Number} dateLeft - the later date\r\n * @param {Date|String|Number} dateRight - the earlier date\r\n * @returns {Number} the number of seconds\r\n *\r\n * @example\r\n * // How many seconds are between\r\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\r\n * var result = differenceInSeconds(\r\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\r\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\r\n * )\r\n * //=> 12\r\n */\r\nfunction differenceInSeconds (dirtyDateLeft, dirtyDateRight) {\r\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000\r\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\r\n}\r\n\r\nmodule.exports = differenceInSeconds\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/date-fns/difference_in_seconds/index.js\n// module id = 610\n// module chunks = 0","var parse = require('../parse/index.js')\r\n\r\n/**\r\n * @category Millisecond Helpers\r\n * @summary Get the number of milliseconds between the given dates.\r\n *\r\n * @description\r\n * Get the number of milliseconds between the given dates.\r\n *\r\n * @param {Date|String|Number} dateLeft - the later date\r\n * @param {Date|String|Number} dateRight - the earlier date\r\n * @returns {Number} the number of milliseconds\r\n *\r\n * @example\r\n * // How many milliseconds are between\r\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\r\n * var result = differenceInMilliseconds(\r\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\r\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\r\n * )\r\n * //=> 1100\r\n */\r\nfunction differenceInMilliseconds (dirtyDateLeft, dirtyDateRight) {\r\n  var dateLeft = parse(dirtyDateLeft)\r\n  var dateRight = parse(dirtyDateRight)\r\n  return dateLeft.getTime() - dateRight.getTime()\r\n}\r\n\r\nmodule.exports = differenceInMilliseconds\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/date-fns/difference_in_milliseconds/index.js\n// module id = 611\n// module chunks = 0","var parse = require('../parse/index.js')\r\nvar differenceInCalendarMonths = require('../difference_in_calendar_months/index.js')\r\nvar compareAsc = require('../compare_asc/index.js')\r\n\r\n/**\r\n * @category Month Helpers\r\n * @summary Get the number of full months between the given dates.\r\n *\r\n * @description\r\n * Get the number of full months between the given dates.\r\n *\r\n * @param {Date|String|Number} dateLeft - the later date\r\n * @param {Date|String|Number} dateRight - the earlier date\r\n * @returns {Number} the number of full months\r\n *\r\n * @example\r\n * // How many full months are between 31 January 2014 and 1 September 2014?\r\n * var result = differenceInMonths(\r\n *   new Date(2014, 8, 1),\r\n *   new Date(2014, 0, 31)\r\n * )\r\n * //=> 7\r\n */\r\nfunction differenceInMonths (dirtyDateLeft, dirtyDateRight) {\r\n  var dateLeft = parse(dirtyDateLeft)\r\n  var dateRight = parse(dirtyDateRight)\r\n\r\n  var sign = compareAsc(dateLeft, dateRight)\r\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight))\r\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference)\r\n\r\n  // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\r\n  // If so, result must be decreased by 1 in absolute value\r\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign\r\n  return sign * (difference - isLastMonthNotFull)\r\n}\r\n\r\nmodule.exports = differenceInMonths\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/date-fns/difference_in_months/index.js\n// module id = 612\n// module chunks = 0","var parse = require('../parse/index.js')\r\n\r\n/**\r\n * @category Month Helpers\r\n * @summary Get the number of calendar months between the given dates.\r\n *\r\n * @description\r\n * Get the number of calendar months between the given dates.\r\n *\r\n * @param {Date|String|Number} dateLeft - the later date\r\n * @param {Date|String|Number} dateRight - the earlier date\r\n * @returns {Number} the number of calendar months\r\n *\r\n * @example\r\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\r\n * var result = differenceInCalendarMonths(\r\n *   new Date(2014, 8, 1),\r\n *   new Date(2014, 0, 31)\r\n * )\r\n * //=> 8\r\n */\r\nfunction differenceInCalendarMonths (dirtyDateLeft, dirtyDateRight) {\r\n  var dateLeft = parse(dirtyDateLeft)\r\n  var dateRight = parse(dirtyDateRight)\r\n\r\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear()\r\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth()\r\n\r\n  return yearDiff * 12 + monthDiff\r\n}\r\n\r\nmodule.exports = differenceInCalendarMonths\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/date-fns/difference_in_calendar_months/index.js\n// module id = 613\n// module chunks = 0","var parse = require('../parse/index.js')\r\n\r\n/**\r\n * @category Common Helpers\r\n * @summary Compare the two dates and return -1, 0 or 1.\r\n *\r\n * @description\r\n * Compare the two dates and return 1 if the first date is after the second,\r\n * -1 if the first date is before the second or 0 if dates are equal.\r\n *\r\n * @param {Date|String|Number} dateLeft - the first date to compare\r\n * @param {Date|String|Number} dateRight - the second date to compare\r\n * @returns {Number} the result of the comparison\r\n *\r\n * @example\r\n * // Compare 11 February 1987 and 10 July 1989:\r\n * var result = compareAsc(\r\n *   new Date(1987, 1, 11),\r\n *   new Date(1989, 6, 10)\r\n * )\r\n * //=> -1\r\n *\r\n * @example\r\n * // Sort the array of dates:\r\n * var result = [\r\n *   new Date(1995, 6, 2),\r\n *   new Date(1987, 1, 11),\r\n *   new Date(1989, 6, 10)\r\n * ].sort(compareAsc)\r\n * //=> [\r\n * //   Wed Feb 11 1987 00:00:00,\r\n * //   Mon Jul 10 1989 00:00:00,\r\n * //   Sun Jul 02 1995 00:00:00\r\n * // ]\r\n */\r\nfunction compareAsc (dirtyDateLeft, dirtyDateRight) {\r\n  var dateLeft = parse(dirtyDateLeft)\r\n  var timeLeft = dateLeft.getTime()\r\n  var dateRight = parse(dirtyDateRight)\r\n  var timeRight = dateRight.getTime()\r\n\r\n  if (timeLeft < timeRight) {\r\n    return -1\r\n  } else if (timeLeft > timeRight) {\r\n    return 1\r\n  } else {\r\n    return 0\r\n  }\r\n}\r\n\r\nmodule.exports = compareAsc\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/date-fns/compare_asc/index.js\n// module id = 614\n// module chunks = 0","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\r\nvar buildFormatLocale = require('./build_format_locale/index.js')\r\n\r\n/**\r\n * @category Locales\r\n * @summary English locale.\r\n */\r\nmodule.exports = {\r\n  distanceInWords: buildDistanceInWordsLocale(),\r\n  format: buildFormatLocale()\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/date-fns/locale/en/index.js\n// module id = 615\n// module chunks = 0","function buildDistanceInWordsLocale () {\r\n  var distanceInWordsLocale = {\r\n    lessThanXSeconds: {\r\n      one: 'less than a second',\r\n      other: 'less than {{count}} seconds'\r\n    },\r\n\r\n    xSeconds: {\r\n      one: '1 second',\r\n      other: '{{count}} seconds'\r\n    },\r\n\r\n    halfAMinute: 'half a minute',\r\n\r\n    lessThanXMinutes: {\r\n      one: 'less than a minute',\r\n      other: 'less than {{count}} minutes'\r\n    },\r\n\r\n    xMinutes: {\r\n      one: '1 minute',\r\n      other: '{{count}} minutes'\r\n    },\r\n\r\n    aboutXHours: {\r\n      one: 'about 1 hour',\r\n      other: 'about {{count}} hours'\r\n    },\r\n\r\n    xHours: {\r\n      one: '1 hour',\r\n      other: '{{count}} hours'\r\n    },\r\n\r\n    xDays: {\r\n      one: '1 day',\r\n      other: '{{count}} days'\r\n    },\r\n\r\n    aboutXMonths: {\r\n      one: 'about 1 month',\r\n      other: 'about {{count}} months'\r\n    },\r\n\r\n    xMonths: {\r\n      one: '1 month',\r\n      other: '{{count}} months'\r\n    },\r\n\r\n    aboutXYears: {\r\n      one: 'about 1 year',\r\n      other: 'about {{count}} years'\r\n    },\r\n\r\n    xYears: {\r\n      one: '1 year',\r\n      other: '{{count}} years'\r\n    },\r\n\r\n    overXYears: {\r\n      one: 'over 1 year',\r\n      other: 'over {{count}} years'\r\n    },\r\n\r\n    almostXYears: {\r\n      one: 'almost 1 year',\r\n      other: 'almost {{count}} years'\r\n    }\r\n  }\r\n\r\n  function localize (token, count, options) {\r\n    options = options || {}\r\n\r\n    var result\r\n    if (typeof distanceInWordsLocale[token] === 'string') {\r\n      result = distanceInWordsLocale[token]\r\n    } else if (count === 1) {\r\n      result = distanceInWordsLocale[token].one\r\n    } else {\r\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\r\n    }\r\n\r\n    if (options.addSuffix) {\r\n      if (options.comparison > 0) {\r\n        return 'in ' + result\r\n      } else {\r\n        return result + ' ago'\r\n      }\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  return {\r\n    localize: localize\r\n  }\r\n}\r\n\r\nmodule.exports = buildDistanceInWordsLocale\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/date-fns/locale/en/build_distance_in_words_locale/index.js\n// module id = 616\n// module chunks = 0","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\r\n\r\nfunction buildFormatLocale () {\r\n  // Note: in English, the names of days of the week and months are capitalized.\r\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\r\n  // Generally, formatted dates should look like they are in the middle of a sentence,\r\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\r\n  var months3char = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n  var monthsFull = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n  var weekdays2char = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\r\n  var weekdays3char = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\n  var weekdaysFull = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\n  var meridiemUppercase = ['AM', 'PM']\r\n  var meridiemLowercase = ['am', 'pm']\r\n  var meridiemFull = ['a.m.', 'p.m.']\r\n\r\n  var formatters = {\r\n    // Month: Jan, Feb, ..., Dec\r\n    'MMM': function (date) {\r\n      return months3char[date.getMonth()]\r\n    },\r\n\r\n    // Month: January, February, ..., December\r\n    'MMMM': function (date) {\r\n      return monthsFull[date.getMonth()]\r\n    },\r\n\r\n    // Day of week: Su, Mo, ..., Sa\r\n    'dd': function (date) {\r\n      return weekdays2char[date.getDay()]\r\n    },\r\n\r\n    // Day of week: Sun, Mon, ..., Sat\r\n    'ddd': function (date) {\r\n      return weekdays3char[date.getDay()]\r\n    },\r\n\r\n    // Day of week: Sunday, Monday, ..., Saturday\r\n    'dddd': function (date) {\r\n      return weekdaysFull[date.getDay()]\r\n    },\r\n\r\n    // AM, PM\r\n    'A': function (date) {\r\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\r\n    },\r\n\r\n    // am, pm\r\n    'a': function (date) {\r\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\r\n    },\r\n\r\n    // a.m., p.m.\r\n    'aa': function (date) {\r\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\r\n    }\r\n  }\r\n\r\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\r\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\r\n  ordinalFormatters.forEach(function (formatterToken) {\r\n    formatters[formatterToken + 'o'] = function (date, formatters) {\r\n      return ordinal(formatters[formatterToken](date))\r\n    }\r\n  })\r\n\r\n  return {\r\n    formatters: formatters,\r\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\r\n  }\r\n}\r\n\r\nfunction ordinal (number) {\r\n  var rem100 = number % 100\r\n  if (rem100 > 20 || rem100 < 10) {\r\n    switch (rem100 % 10) {\r\n      case 1:\r\n        return number + 'st'\r\n      case 2:\r\n        return number + 'nd'\r\n      case 3:\r\n        return number + 'rd'\r\n    }\r\n  }\r\n  return number + 'th'\r\n}\r\n\r\nmodule.exports = buildFormatLocale\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/date-fns/locale/en/build_format_locale/index.js\n// module id = 617\n// module chunks = 0","var commonFormatterKeys = [\r\n  'M', 'MM', 'Q', 'D', 'DD', 'DDD', 'DDDD', 'd',\r\n  'E', 'W', 'WW', 'YY', 'YYYY', 'GG', 'GGGG',\r\n  'H', 'HH', 'h', 'hh', 'm', 'mm',\r\n  's', 'ss', 'S', 'SS', 'SSS',\r\n  'Z', 'ZZ', 'X', 'x'\r\n]\r\n\r\nfunction buildFormattingTokensRegExp (formatters) {\r\n  var formatterKeys = []\r\n  for (var key in formatters) {\r\n    if (formatters.hasOwnProperty(key)) {\r\n      formatterKeys.push(key)\r\n    }\r\n  }\r\n\r\n  var formattingTokens = commonFormatterKeys\r\n    .concat(formatterKeys)\r\n    .sort()\r\n    .reverse()\r\n  var formattingTokensRegExp = new RegExp(\r\n    '(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?' + '(' + formattingTokens.join('|') + '|.)', 'g'\r\n  )\r\n\r\n  return formattingTokensRegExp\r\n}\r\n\r\nmodule.exports = buildFormattingTokensRegExp\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/date-fns/locale/_lib/build_formatting_tokens_reg_exp/index.js\n// module id = 618\n// module chunks = 0"],"sourceRoot":""}