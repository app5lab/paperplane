{"version":3,"sources":["../../src/pages/conversation/conversation.module.ts","../../src/pages/conversation/conversation.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACE;AAalD;IAAA;IAAqC,CAAC;IAAzB,sBAAsB;QAXlC,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,uEAAgB;aACjB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,uEAAgB,CAAC;aAC3C;YACD,OAAO,EAAC;gBACN,uEAAgB;aACjB;SACF,CAAC;OACW,sBAAsB,CAAG;IAAD,6BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;ACfwC;AAErB;AAOtD;IAOE,0BAAoB,KAAa,EAAS,GAAe;QAArC,UAAK,GAAL,KAAK,CAAQ;QAAS,QAAG,GAAH,GAAG,CAAY;QALzD,wCAAwC;QACxC,aAAQ,GAAU,EAAE,CAAC;QACrB,YAAO,GAAU,EAAE,CAAC;QAKlB,IAAI,CAAC,UAAU,GAAG,IAAI,2DAAY,EAAU,CAAC;QAC7C,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAE,YAAY,CAAC,OAAO,CAAE,UAAU,CAAE,CAAE;QAC3D,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,GAAE,GAAG,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,EAAC,GAAG,EAAC,MAAM,EAAC,CAAC;QAC/E,kFAAkF;IAEpF,CAAC;IAED,sBAAsB;IACtB,IAAI;IACJ,+CAA+C;IAC/C,yBAAyB;IACzB,QAAQ;IACR,wBAAwB;IACxB,UAAU;IACV,mFAAmF;IACnF,UAAU;IACV,+BAA+B;IAC/B,WAAW;IACX,kCAAkC;IAClC,IAAI;IAEJ,2CAAgB,GAAhB;QAEE,mCAAmC;IACrC,CAAC;IAED,+BAAI,GAAJ;QAEE,yEAAyE;QACzE,IAAI;QACJ,0BAA0B;QAC1B,MAAM;QACN,yCAAyC;QACzC,SAAS;QACT,2BAA2B;QAC3B,OAAO;IACT,CAAC;IAEM,sCAAW,GAAlB;QAEE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAE,cAAc,CAAE,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACxB,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACnC,IAAI,CAAC,IAAI,CAAE,OAAO,CAAE,CAAC;QACrB,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;IAC5B,CAAC;IAED,+BAAI,GAAJ,UAAO,OAAO;QAEZ,+BAA+B;QAC/B,IAAI,IAAI,GAAG,wBAAwB,CAAC;QACpC,sFAAsF;QACtF,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,yCAAc,GAAd;QAEE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE;YAEd,UAAU,CAAE;gBAEV,sCAAsC;YACxC,CAAC,CAAE,CAAC;QACN,CAAC,CAAE,CAAC;IACN,CAAC;IA5EuB;QAAvB,gEAAS,CAAE,SAAS,CAAE;;qDAAc;IAD1B,gBAAgB;QAJ5B,gEAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;WACG;SACjC,CAAC;yBAQyD;OAP9C,gBAAgB,CA8E5B;IAAD,CAAC;AAAA;SA9EY,gBAAgB,e","file":"11.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ConversationPage } from './conversation';\n\n@NgModule({\n  declarations: [\n    ConversationPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ConversationPage),\n  ],\n  exports:[\n    ConversationPage\n  ]\n})\nexport class ConversationPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/conversation/conversation.module.ts","import { Component, ViewChild, EventEmitter, NgZone } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { ApiProvider } from '../../providers/api/api';\n\n@IonicPage()\n@Component({\n  selector: 'page-conversation',\n  templateUrl: 'conversation.html',\n})\nexport class ConversationPage {\n  @ViewChild( 'txtChat' ) txtChat: any;\n  // @ViewChild( 'content' ) content: any;\n  messages: any[] = [];\n  chatBox: string =\"\"; \n  btnEmitter: EventEmitter<string>;\n\n  constructor( public _zone: NgZone, public api:ApiProvider)\n  {\n    this.btnEmitter = new EventEmitter<string>();\n    this.messages = [];\n    this.chatBox = \"\";\n    this.init();\n    var user = JSON.parse( localStorage.getItem( 'zip_user' ) )\n    this.api.firebase().ref('chat/users/' + user.id +'/' + '10').push({msg:'test'})\n    // this.api.firebase().ref('chat/users/' + user.id +'/' + '10').push({msg:'test'})\n   \n  }\n\n  // ionViewWillEnter ()\n  // {\n  //   this.databaseService.getJson( \"messages\" )\n  //     .then( messages =>\n  //     {\n  //       if ( messages )\n  //       {\n  //         this.messages = this.messages.concat( _.sortBy( messages, ['epoch'] ) );\n  //       }\n  //       this.scrollToBottom();\n  //     } );\n  //   this.socketService.connect();\n  // }\n\n  ionViewWillLeave ()\n  {\n    // this.socketService.disconnect();\n  }\n\n  init ()\n  {\n    // this.socketService.messages.subscribe( ( chatMessage: ChatMessage ) =>\n    // {\n    //   this._zone.run( () =>\n    //   {\n    //     this.messages.push( chatMessage );\n    //   } );\n    //   this.scrollToBottom();\n    // } );\n  }\n\n  public sendMessage ()\n  {\n    this.btnEmitter.emit( \"sent clicked\" );\n    this.txtChat.setFocus();\n    let message = this.txtChat.content;\n    this.send( message );\n    this.txtChat.clearInput();\n  }\n\n  send ( message )\n  {\n    //todo read email from database\n    let from = \"annaggarwal@paypal.com\";\n    // this.socketService.newRequest( UtilService.formatMessageRequest( message, from ) );\n    this.chatBox = '';\n    this.scrollToBottom();\n  }\n\n  scrollToBottom ()\n  {\n    this._zone.run( () =>\n    {\n      setTimeout( () =>\n      {\n        // this.content.scrollToBottom( 300 );\n      } );\n    } );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/conversation/conversation.ts"],"sourceRoot":""}