{"version":3,"sources":["../../src/pages/conversation/conversation.module.ts","../../src/pages/conversation/conversation.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACE;AAalD;IAAA;IAAqC,CAAC;IAAzB,sBAAsB;QAXlC,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,uEAAgB;aACjB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,uEAAgB,CAAC;aAC3C;YACD,OAAO,EAAC;gBACN,uEAAgB;aACjB;SACF,CAAC;OACW,sBAAsB,CAAG;IAAD,6BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;ACfwC;AAErB;AAOtD;IAOE,0BAAoB,KAAa,EAAS,GAAe;QAArC,UAAK,GAAL,KAAK,CAAQ;QAAS,QAAG,GAAH,GAAG,CAAY;QALzD,wCAAwC;QACxC,aAAQ,GAAU,EAAE,CAAC;QACrB,YAAO,GAAU,EAAE,CAAC;QAKlB,IAAI,CAAC,UAAU,GAAG,IAAI,2DAAY,EAAU,CAAC;QAC7C,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAE,YAAY,CAAC,OAAO,CAAE,UAAU,CAAE,CAAE;QAC3D,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,GAAE,GAAG,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,EAAC,GAAG,EAAC,MAAM,EAAC,CAAC;QAC/E,kFAAkF;IAEpF,CAAC;IAED,sBAAsB;IACtB,IAAI;IACJ,+CAA+C;IAC/C,yBAAyB;IACzB,QAAQ;IACR,wBAAwB;IACxB,UAAU;IACV,mFAAmF;IACnF,UAAU;IACV,+BAA+B;IAC/B,WAAW;IACX,kCAAkC;IAClC,IAAI;IAEJ,2CAAgB,GAAhB;QAEE,mCAAmC;IACrC,CAAC;IAED,+BAAI,GAAJ;QAEE,yEAAyE;QACzE,IAAI;QACJ,0BAA0B;QAC1B,MAAM;QACN,yCAAyC;QACzC,SAAS;QACT,2BAA2B;QAC3B,OAAO;IACT,CAAC;IAEM,sCAAW,GAAlB;QAEE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAE,cAAc,CAAE,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACxB,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACnC,IAAI,CAAC,IAAI,CAAE,OAAO,CAAE,CAAC;QACrB,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;IAC5B,CAAC;IAED,+BAAI,GAAJ,UAAO,OAAO;QAEZ,+BAA+B;QAC/B,IAAI,IAAI,GAAG,wBAAwB,CAAC;QACpC,sFAAsF;QACtF,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,yCAAc,GAAd;QAEE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE;YAEd,UAAU,CAAE;gBAEV,sCAAsC;YACxC,CAAC,CAAE,CAAC;QACN,CAAC,CAAE,CAAC;IACN,CAAC;IA5EuB;QAAvB,gEAAS,CAAE,SAAS,CAAE;;qDAAc;IAD1B,gBAAgB;QAJ5B,gEAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;WACG;SACjC,CAAC;yBAQyD;OAP9C,gBAAgB,CA8E5B;IAAD,CAAC;AAAA;SA9EY,gBAAgB,e","file":"11.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { ConversationPage } from './conversation';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ConversationPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(ConversationPage),\r\n  ],\r\n  exports:[\r\n    ConversationPage\r\n  ]\r\n})\r\nexport class ConversationPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/conversation/conversation.module.ts","import { Component, ViewChild, EventEmitter, NgZone } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { ApiProvider } from '../../providers/api/api';\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-conversation',\r\n  templateUrl: 'conversation.html',\r\n})\r\nexport class ConversationPage {\r\n  @ViewChild( 'txtChat' ) txtChat: any;\r\n  // @ViewChild( 'content' ) content: any;\r\n  messages: any[] = [];\r\n  chatBox: string =\"\"; \r\n  btnEmitter: EventEmitter<string>;\r\n\r\n  constructor( public _zone: NgZone, public api:ApiProvider)\r\n  {\r\n    this.btnEmitter = new EventEmitter<string>();\r\n    this.messages = [];\r\n    this.chatBox = \"\";\r\n    this.init();\r\n    var user = JSON.parse( localStorage.getItem( 'zip_user' ) )\r\n    this.api.firebase().ref('chat/users/' + user.id +'/' + '10').push({msg:'test'})\r\n    // this.api.firebase().ref('chat/users/' + user.id +'/' + '10').push({msg:'test'})\r\n   \r\n  }\r\n\r\n  // ionViewWillEnter ()\r\n  // {\r\n  //   this.databaseService.getJson( \"messages\" )\r\n  //     .then( messages =>\r\n  //     {\r\n  //       if ( messages )\r\n  //       {\r\n  //         this.messages = this.messages.concat( _.sortBy( messages, ['epoch'] ) );\r\n  //       }\r\n  //       this.scrollToBottom();\r\n  //     } );\r\n  //   this.socketService.connect();\r\n  // }\r\n\r\n  ionViewWillLeave ()\r\n  {\r\n    // this.socketService.disconnect();\r\n  }\r\n\r\n  init ()\r\n  {\r\n    // this.socketService.messages.subscribe( ( chatMessage: ChatMessage ) =>\r\n    // {\r\n    //   this._zone.run( () =>\r\n    //   {\r\n    //     this.messages.push( chatMessage );\r\n    //   } );\r\n    //   this.scrollToBottom();\r\n    // } );\r\n  }\r\n\r\n  public sendMessage ()\r\n  {\r\n    this.btnEmitter.emit( \"sent clicked\" );\r\n    this.txtChat.setFocus();\r\n    let message = this.txtChat.content;\r\n    this.send( message );\r\n    this.txtChat.clearInput();\r\n  }\r\n\r\n  send ( message )\r\n  {\r\n    //todo read email from database\r\n    let from = \"annaggarwal@paypal.com\";\r\n    // this.socketService.newRequest( UtilService.formatMessageRequest( message, from ) );\r\n    this.chatBox = '';\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  scrollToBottom ()\r\n  {\r\n    this._zone.run( () =>\r\n    {\r\n      setTimeout( () =>\r\n      {\r\n        // this.content.scrollToBottom( 300 );\r\n      } );\r\n    } );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/conversation/conversation.ts"],"sourceRoot":""}